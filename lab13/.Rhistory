plotOutput("plot", width = "700px", height = "750px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity!="All") %>%
ggplot(aes_string(x ="Academic_Yr", y = "FilteredCountFR", fill=input$x))+
geom_col(position = "dodge", alpha=0.9, size=4)+
theme_light(base_size = 18)+ labs(x=NULL, y="Number of Admitted Students", fill="Fill Variable")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Student/Applicant Details", choices = c("Ethnicity", "Category", "Campus"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Data based on the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Data based on the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity of Enrollment Across UC Campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Enrollment Variable", choices = c("Campus", "Ethnicity", "Category"), selected = "Campus"),
hr(),
helpText("UC Information Center Reference: (https://www.universityofcalifornia.edu/infocenter)"),
), # close the first box
box(title= "Enrollment Data Per UC Campus", width = 5,
plotOutput("plot", width = "700px", height = "750px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity!="All") %>%
ggplot(aes_string(x ="Academic_Yr", y = "FilteredCountFR", fill=input$x))+
geom_col(position = "dodge", alpha=0.9, size=4)+
theme_light(base_size = 18)+ labs(x=NULL, y="Number of Admitted Students", fill="Fill Variable")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Data based on the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Data based on the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+ #scale_x_discrete(breaks=c(,1940,1960,1980,2000,2020))
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Data based on the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+ scale_x_discrete(breaks=c(2010,2012,2014,2016,2018,2019))
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Data based on the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+ scale_x_discrete(breaks=c(2010,2012,2014,2016,2018,2019))+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Data based on the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+ scale_x_discrete(breaks=c(2010))+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Data based on the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Data based on the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Relative Abundance"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select RA Taxon", choices = c("RA_Apes", "RA_Birds", "RA_Elephant", "RA_Monkeys", "RA_Rodent", "RA_Ungulate"),
selected = "RA_Apes"),
hr(),
helpText("Reference: Koerner SE, Poulsen JR, Blanchard EJ, Okouyi J, Clark CJ. Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016.")
), # close the first box
box(title = "Relative Abundance %", width = 6,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
gabon %>%
ggplot(aes_string(x = "Distance", y = input$x)) +
geom_point(size=4)+
geom_smooth(method=lm, se=T)+
scale_x_continuous(breaks=seq(0, 30, by = 5))+ theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Penguins"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "Plot of Penguins Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Penguins"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "Plot of Penguins Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Penguins"),
dashboardSidebar(),
dashboardBody(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_depth_mm"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) + geom_point() + theme_light()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:",
choices=unique(homerange$taxon)),
hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")
),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output) {
# fill in the spot we created for a plot
output$taxonPlot <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x=log10.hra)) +
geom_density(color="black", fill="steelblue", alpha=0.6)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Diversity Across UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Desired Variable", choices = c("Ethnicity", "Category", "Campus"),
selected = "Campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Data based on the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y="FilteredCountFR",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
